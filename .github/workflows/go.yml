name: Go
on: [push, pull_request]
jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, macos-latest]
    steps:
  
    - name: Set up Go 1.14
      uses: actions/setup-go@v2
      with:
        go-version: 1.14
      id: go

    - name: variables
      run: echo "==> build ${REPO}"
      env:
        REPO: SSHcom/privx-sdk-go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        path: ./src/github.com/${REPO}

    - name: go get tools
      run: |
        go get golang.org/x/lint/golint
        go get github.com/mattn/goveralls
        go get github.com/go-playground/overalls

    - name: go get deps
      run: |
        go get -v -t -d github.com/${REPO}/...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: go build
      run: go build -v github.com/${REPO}/...

    - name: go test
      run: go test github.com/${REPO}/...

    - name: coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        $(go env GOPATH)/bin/overalls -project=github.com/${REPO}
        $(go env GOPATH)/bin/goveralls -coverprofile=$(go env GOPATH)/src/github.com/${REPO}/overalls.coverprofile -service=github

    - name: go vet
      run: go vet github.com/${REPO}/...

    - name: golint
      run: |
        $(go env GOPATH)/bin/golint -set_exit_status github.com/${REPO}/...
