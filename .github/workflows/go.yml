name: Go
on: [push, pull_request]
jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, macos-latest]
    steps:
  
    - name: Set up Go 1.14
      uses: actions/setup-go@v2
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        path: $(go env GOPATH)/src/github.com/${{ github.repository }}

    - name: go get tools
      run: |
        go get golang.org/x/lint/golint
        go get github.com/mattn/goveralls
        go get github.com/go-playground/overalls

    - name: go get deps
      run: |
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: go build
      run: go build -v github.com/${{ github.repository }}/...

    - name: go test
      run: go test github.com/${{ github.repository }}/...

    - name: coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        $(go env GOPATH)/bin/overalls -project=github.com/${{ github.repository }}
        echo "--"
        ls $(go env GOPATH)/src/github.com/${{ github.repository }}/
        echo "--"
        ls $(go env GOPATH)/src/github.com/${{ github.repository }}/api
        $(go env GOPATH)/bin/goveralls -coverprofile=$(go env GOPATH)/src/github.com/${{ github.repository }}/overalls.coverprofile -service=github

    - name: go vet
      run: go vet github.com/${{ github.repository }}/...

    - name: golint
      run: |
        $(go env GOPATH)/bin/golint -set_exit_status github.com/${{ github.repository }}/...
